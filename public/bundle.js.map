{"version":3,"file":"bundle.js","sources":["../src/algebra/vec2.js","../src/core/geom/polygon.js","../src/core/globals.js","../src/core/scene.js","../src/core/geom/util.js","../src/core/geom/capsule.js","../src/core/anim/animeClip.js","../src/core/anim/animator.js","../src/core/player.js","../src/core/input/inputSystem.js","../src/core/instance.js","../src/network/channel.js","../src/core/server.js","../src/core/client.js","../src/main.js"],"sourcesContent":["// @ts-check\n\nexport default class Vec2 {\n    /**\n     * @param {number} [x]\n     * @param {number} [y]\n     */\n    constructor(x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * @return {boolean} is zero vector\n     */\n    isZero() {\n        return this.x == 0 && this.y == 0;\n    }\n\n    /**\n     * @param {Vec2} other\n     * @return {Vec2} result of this + other\n     */\n    add(other) {\n        return new Vec2(this.x + other.x, this.y + other.y);\n    }\n\n    /**\n     * @param {Vec2} other\n     * @return {number} result of this cross other\n     */\n    cross(other) {\n        return this.x * other.y - this.y * other.x;\n    }\n\n    /**\n     * @param {Vec2} other\n     * @return {number} result of this dot other\n     */\n    dot(other) {\n        return this.x * other.x + this.y * other.y;\n    }\n\n    /**\n     * @param {Vec2} other\n     * @return {Vec2} result of this - other\n     */\n    sub(other) {\n        return new Vec2(this.x - other.x, this.y - other.y);\n    }\n\n    /**\n     * @param {number} scale\n     * @return {Vec2} result of this * scale\n     */\n    mul(scale) {\n        return new Vec2(this.x * scale, this.y * scale);\n    }\n\n    /**\n     * @param {number} scale\n     * @return {Vec2} result of this / scale\n     */\n    div(scale) {\n        return new Vec2(this.x / scale, this.y / scale);\n    }\n\n    /**\n     * project this vector to plane\n     * @param {Vec2} normal plane normal\n     * @return {Vec2} projected vector\n     */\n    planeProject(normal) {\n        return this.sub(normal.mul(this.dot(normal)));\n    }\n\n    /**\n     * @return {number} length of this vec2\n     */\n    length() {\n        return Math.sqrt(this.sqrLength());\n    }\n\n    /**\n     * @return {number} sqr length of this vec2\n     */\n    sqrLength() {\n        return this.x * this.x + this.y * this.y;\n    }\n\n    /**\n     * @return {Vec2} normalized vec2 of this vec2\n     */\n    normalize() {\n        const length = this.length();\n        if (length == 0) {\n            return this.clone();\n        }\n        return this.div(this.length());\n    }\n\n    /**\n     * @return {Vec2} clone of this vec2\n     */\n    clone() {\n        return new Vec2(this.x, this.y);\n    }\n}\n","import Vec2 from \"../../algebra/vec2\";\n\nexport default class Polygon {\n\n    /**\n     * construct a polygon from a set of points\n     * segments are clockwise order\n     * @param {Vec2[]} points\n     * @param {string} [color]\n     */\n    constructor(points, color = \"#FF00FF\") {\n        this.color = color;\n        if (points.length < 3) {\n            this.isValid = false;\n            return;\n        }\n        this.isValid = true;\n        /** @type {Vec2[]} */\n        this.points = [];\n        for (let point of points) {\n            this.points.push(point.clone());\n        }\n    }\n\n    /**\n     * iterate over all segment\n     * @param {(p0: Vec2, p1: Vec2) => void} callback\n     */\n    eachSegment(callback) {\n        if (!this.isValid) {\n            return;\n        }\n        for (let i = 0; i < this.points.length; i++) {\n            const j = (i + 1) % this.points.length;\n            callback(this.points[i].clone(), this.points[j].clone());\n        }\n    }\n\n    /**\n     * draw this polygon\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n        if (!this.isValid) {\n            return;\n        }\n        ctx.beginPath();\n        for (let i = 0; i < this.points.length; i++) {\n            ctx.lineTo(this.points[i].x, this.points[i].y);\n        }\n        ctx.closePath();\n        ctx.fillStyle = this.color;\n        ctx.fill();\n    }\n}\n","// @ts-check\n\n// Global time manager(milliseconds)\nconst Time = {\n    scale: 1,\n    currentTime: 0,\n    currentUnscaleTime: 0,\n    lastUnscaleTime: 0,\n};\n\n// Global key states\nconst KeyStates = {};\n\n// Global Debug flags\nconst Debug = {\n    showPos: false,\n    showCapsule: false,\n    showDebugDraw: false\n}\n\n// let `Time` and `Debug` be global variable\nwindow[\"Time\"] = Time;\nwindow[\"Debug\"] = Debug;\n\nexport {\n    Time,\n    KeyStates,\n    Debug\n};\n","// @ts-check\n\nimport Polygon from \"./geom/polygon\";\nimport Vec2 from \"../algebra/vec2\";\nimport { Debug } from \"./globals\";\n\nclass DebugDrawable {\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n\n    }\n}\n\nclass DebugPoint extends DebugDrawable {\n    /**\n     * @param {Vec2} pos\n     * @param {string} [color]\n     * @param {number} [size]\n     */\n    constructor(pos, color = \"#ffffff\", size = 4) {\n        super();\n        this.pos = pos.clone();\n        this.color = color;\n        this.size = size;\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n        ctx.fillStyle = this.color\n        ctx.fillRect(this.pos.x - this.size * 0.5, this.pos.y - this.size * 0.5, this.size, this.size);\n    }\n}\n\nclass DebugLine extends DebugDrawable {\n    /**\n     * @param {Vec2} a\n     * @param {Vec2} b\n     * @param {string} [color]\n     */\n    constructor(a, b, color = \"#ffffff\") {\n        super();\n        this.a = a.clone();\n        this.b = b.clone();\n        this.color = color;\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n        ctx.beginPath();\n        ctx.moveTo(this.a.x, this.a.y);\n        ctx.lineTo(this.b.x, this.b.y);\n        ctx.strokeStyle = this.color;\n        ctx.stroke();\n    }\n}\n\nclass DebugArrow extends DebugDrawable {\n    /**\n     * @param {Vec2} a\n     * @param {Vec2} b\n     * @param {string} [color]\n     * @param {number} [arrowSize]\n     */\n    constructor(a, b, color = \"#ffffff\", arrowSize = 10) {\n        super();\n        this.a = a.clone();\n        this.b = b.clone();\n        this.color = color;\n        const lineDir = this.b.sub(this.a).normalize();\n        let cos = -0.70711;\n        let sin = 0.70711;\n        this.arrowEnd1 = new Vec2(cos * lineDir.x - sin * lineDir.y, sin * lineDir.x + cos * lineDir.y)\n            .normalize().mul(arrowSize).add(b);\n        sin = -sin;\n        this.arrowEnd2 = new Vec2(cos * lineDir.x - sin * lineDir.y, sin * lineDir.x + cos * lineDir.y)\n            .normalize().mul(arrowSize).add(b);\n\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n        ctx.beginPath();\n        ctx.moveTo(this.a.x, this.a.y);\n        ctx.lineTo(this.b.x, this.b.y);\n        ctx.lineTo(this.arrowEnd1.x, this.arrowEnd1.y);\n        ctx.moveTo(this.b.x, this.b.y);\n        ctx.lineTo(this.arrowEnd2.x, this.arrowEnd2.y);\n        ctx.strokeStyle = this.color;\n        ctx.stroke();\n    }\n}\n\nconst DurationType = {\n    oneFrame: 0,\n    time: 1,\n}\nObject.freeze(DurationType);\n\nclass DebugDrawableWrapper {\n\n    /**\n     * @param {number} durationType\n     * @param {number} time\n     */\n    constructor(durationType, time = 0) {\n        this.durationType = durationType;\n        this.time = time;\n        /** @type {DebugDrawable} */\n        this.drawable = null;\n        this.hasDrawed = false;\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n        this.hasDrawed = true;\n        if (this.drawable) {\n            this.drawable.draw(ctx);\n        }\n    }\n}\n\nexport default class Scene {\n    /**\n     * @param {number} width\n     * @param {number} height\n     * @param {string} [backgroundColor]\n     */\n    constructor(width, height, backgroundColor = \"#1E88A8\") {\n        this.width = width;\n        this.height = height;\n        this.backgroundColor = backgroundColor;\n\n        // bound polygon (inverse segment order)\n        const boundPoly = new Polygon([new Vec2(), new Vec2(0, height), new Vec2(width, height), new Vec2(width, 0)], this.backgroundColor);\n        this.polygons = [boundPoly];\n\n        /** @type {DebugDrawableWrapper[]} */\n        this.timeDrawables = [];\n        /** @type {DebugDrawableWrapper[]} */\n        this.oneFrameDrawables = []\n    }\n\n\n    /**\n     * @param {Polygon} polygon\n     */\n    addPolygon(polygon) {\n        this.polygons.push(polygon);\n    }\n\n    /**\n     * @param {number} dt\n     */\n    update(dt) {\n        if (this.oneFrameDrawables.length != 0) {\n            const temp = [];\n            for (let wrapper of this.oneFrameDrawables) {\n                if (!wrapper.hasDrawed) {\n                    temp.push(wrapper);\n                }\n            }\n            this.oneFrameDrawables = temp;\n        }\n        if (this.timeDrawables.length != 0) {\n            let cutIdx = -1;\n            for (let i = this.timeDrawables.length - 1; i >= 0; i--) {\n                if (this.timeDrawables[i].time > 0) {\n                    cutIdx = i;\n                    break;\n                }\n            }\n            this.timeDrawables.length = cutIdx + 1;\n            for (let wrapper of this.timeDrawables) {\n                wrapper.time -= dt;\n            }\n        }\n        if (!Debug.showDebugDraw) {\n            if (this.oneFrameDrawables.length != 0) {\n                this.oneFrameDrawables.length = 0;\n            }\n            if (this.timeDrawables.length != 0) {\n                this.timeDrawables.length = 0;\n            }\n        }\n    }\n\n    /**\n     * draw scene\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    draw(ctx) {\n        for (let polygon of this.polygons) {\n            polygon.draw(ctx);\n        }\n    }\n\n    /**\n     * draw debug\n     * @param {CanvasRenderingContext2D} ctx\n     */\n    drawDebug(ctx) {\n        for (let wrapper of this.timeDrawables) {\n            wrapper.draw(ctx);\n        }\n        for (let wrapper of this.oneFrameDrawables) {\n            wrapper.draw(ctx);\n        }\n    }\n\n    /**\n     * insert wrapper by time sort(large to small)\n     * @param {DebugDrawableWrapper} wrapper\n     */\n    insertToTimeDrawables(wrapper) {\n        let insertIdx = 0;\n        for (let i = this.timeDrawables.length - 1; i >=0; i--) {\n            if (this.timeDrawables[i].time >= wrapper.time) {\n                insertIdx = i;\n                break;\n            }\n        }\n        this.timeDrawables.splice(insertIdx, 0, wrapper);\n    }\n\n    /**\n     * @param {DebugDrawableWrapper} wrapper\n     */\n    addDebugDrawableWrapper(wrapper) {\n        if (!Debug.showDebugDraw) {\n            return;\n        }\n        if (wrapper.durationType == DurationType.oneFrame) {\n            this.oneFrameDrawables.push(wrapper);\n        } else {\n            this.insertToTimeDrawables(wrapper);\n        }\n    }\n\n    /**\n     * @param {number} durationType\n     * @param {Vec2} pos\n     * @param {number} [time]\n     * @param {string} [color]\n     * @param {number} [size]\n     */\n    debugDrawPoint(durationType, pos, time, color, size) {\n        const wrapper = new DebugDrawableWrapper(durationType, time);\n        wrapper.drawable = new DebugPoint(pos, color, size);\n        this.addDebugDrawableWrapper(wrapper);\n    }\n\n    /**\n     * @param {number} durationType\n     * @param {Vec2} a\n     * @param {Vec2} b\n     * @param {number} [time]\n     * @param {string} [color]\n     */\n    debugDrawLine(durationType, a, b, time, color) {\n        const wrapper = new DebugDrawableWrapper(durationType, time);\n        wrapper.drawable = new DebugLine(a, b, color);\n        this.addDebugDrawableWrapper(wrapper);\n    }\n\n    /**\n     * @param {number} durationType\n     * @param {Vec2} a\n     * @param {Vec2} b\n     * @param {number} [time]\n     * @param {string} [color]\n     * @param {number} [arrowSize]\n     */\n    debugDrawArrow(durationType, a, b, time, color, arrowSize) {\n        const wrapper = new DebugDrawableWrapper(durationType, time);\n        wrapper.drawable = new DebugArrow(a, b, color, arrowSize);\n        this.addDebugDrawableWrapper(wrapper);\n    }\n}\n\nexport {\n    DurationType,\n}\n","// @ts-check\n\nimport Vec2 from \"../../algebra/vec2\";\nimport Scene from \"../scene\";\n\n/**\n * point shortest distance to segment\n * @param {Vec2} p\n * @param {Vec2} a0\n * @param {Vec2} a1\n * @return {{dist: number, point: Vec2}} result of test\n */\nfunction distToSegment(p, a0, a1) {\n    let l2 = a0.sub(a1).sqrLength();\n    if (l2 == 0) {\n        let dist = p.sub(a0).length();\n        return {\n            dist: dist,\n            point: a0.clone()\n        };\n    }\n    let A = a1.sub(a0);\n    let t = p.sub(a0).dot(A) / l2;\n    t = Math.max(0, Math.min(1, t));\n    let point = a0.add(A.mul(t));\n    let dist = p.sub(point).length();\n    return {\n        dist: dist,\n        point: point\n    };\n}\n\n/**\n * test two segment shortest distance\n * @typedef {Object} Segment\n * @property {number} dist shortest distance\n * @property {Vec2} pa shortest point at segment a\n * @property {Vec2} pb shortest point at segment b\n *\n * @param {Vec2} a0 first point of segment a\n * @param {Vec2} a1 second point of segment a\n * @param {Vec2} b0 first point of segment b\n * @param {Vec2} b1 second point of segment b\n * @return {Segment} result of test\n */\nfunction segmentShortestTest(a0, a1, b0, b1) {\n    let A = a1.sub(a0);\n    let B = b1.sub(b0);\n\n    let axb = A.cross(B);\n    let bxa = B.cross(A);\n    let isLineCross = false;\n    let crossPoint = new Vec2(0, 0);\n\n    if (Math.abs(axb) > 0 || Math.abs(bxa) > 0) {\n        let ta = ((b0.x - a0.x) * B.y - (b0.y - a0.y) * B.x) / axb;\n        let tb = ((b0.x - a0.x) * A.y - (b0.y - a0.y) * A.x) / -bxa;\n        if (ta >= 0 && ta <= 1 && tb >= 0 && tb <= 1) {\n            crossPoint = a0.add(A.mul(ta));\n            isLineCross = true;\n        }\n    }\n\n    if (isLineCross) {\n        return {\n            dist: 0,\n            pa: crossPoint.clone(),\n            pb: crossPoint.clone()\n        }\n    }\n\n    let result = {\n        dist: Infinity,\n        pa: new Vec2(0, 0),\n        pb: new Vec2(0, 0)\n    };\n\n    /** @type {{dist: number, point: Vec2}} */\n    let temp;\n\n    temp = distToSegment(a0, b0, b1);\n    if (temp.dist < result.dist) {\n        result.dist = temp.dist;\n        result.pa = a0.clone();\n        result.pb = temp.point.clone();\n    }\n    temp = distToSegment(a1, b0, b1);\n    if (temp.dist < result.dist) {\n        result.dist = temp.dist;\n        result.pa = a1.clone();\n        result.pb = temp.point.clone();\n    }\n    temp = distToSegment(b0, a0, a1);\n    if (temp.dist < result.dist) {\n        result.dist = temp.dist;\n        result.pa = b0.clone();\n        result.pb = temp.point.clone();\n    }\n    temp = distToSegment(b1, a0, a1);\n    if (temp.dist < result.dist) {\n        result.dist = temp.dist;\n        result.pa = b1.clone();\n        result.pb = temp.point.clone();\n    }\n\n    return result;\n}\n\nclass HitResult {\n    constructor() {\n        this.blockingHit = false;\n        this.startPenetrating = false;\n        this.time = 1;\n        this.start = new Vec2();\n        this.end = new Vec2();\n        this.distance = 0;\n        this.penetrationDepth = 0;\n        this.impactPoint = new Vec2();\n        this.impactNormal = new Vec2();\n        this.location = new Vec2();\n        this.normal = new Vec2();\n    }\n\n    /**\n     * Return true if there was a blocking hit that was not caused by starting in penetration.\n     * @return {boolean}\n     */\n    isValidBlock() {\n        return this.blockingHit && !this.startPenetrating;\n    }\n}\n\n/**\n * shot a ray to test scene, return first hit\n * @param {Vec2} start\n * @param {Vec2} dir\n * @param {number} distance\n * @param {Scene} scene\n * @return {HitResult}\n */\nfunction lineSweep(start, dir, distance, scene) {\n    const end = start.add(dir.mul(distance));\n\n    let hitResult = new HitResult();\n    hitResult.start = start.clone();\n    hitResult.end = end.clone();\n    hitResult.distance = distance;\n    hitResult.time = 1;\n    if (distance == 0) {\n        return hitResult;\n    }\n    for (let polygon of scene.polygons) {\n        polygon.eachSegment((p0, p1) => {\n            const seg = segmentShortestTest(start, end, p0, p1);\n            if (seg.dist == 0) {\n                const cross = seg.pa;\n                const d = cross.sub(start).length();\n                if (d <= hitResult.distance) {\n                    hitResult.blockingHit = true;\n                    hitResult.distance = d;\n                    hitResult.impactPoint = cross.clone();\n                    const segmentDir = p1.sub(p0).normalize();\n                    hitResult.impactNormal = new Vec2(segmentDir.y, -segmentDir.x);\n                    hitResult.location = cross.clone();\n                    hitResult.normal = new Vec2(segmentDir.y, -segmentDir.x);\n                    hitResult.time = d / distance;\n                    if (dir.dot(hitResult.impactNormal) > 0) {\n                        hitResult.startPenetrating = true;\n                        hitResult.penetrationDepth = d;\n                    }\n                }\n            }\n        });\n    }\n\n    return hitResult;\n}\n\n/**\n * shot a ray to test scene, return hits\n * @param {Vec2} start\n * @param {Vec2} dir\n * @param {number} distance\n * @param {Scene} scene\n * @return {HitResult[]}\n */\nfunction lineSweepMulti(start, dir, distance, scene) {\n    const hits = [];\n    const end = start.add(dir.mul(distance));\n\n\n    if (distance == 0) {\n        return hits;\n    }\n    for (let polygon of scene.polygons) {\n        polygon.eachSegment((p0, p1) => {\n            const seg = segmentShortestTest(start, end, p0, p1);\n            if (seg.dist == 0) {\n                let hitResult = new HitResult();\n                hitResult.start = start.clone();\n                hitResult.end = end.clone();\n\n                const cross = seg.pa;\n                const d = cross.sub(start).length();\n                hitResult.blockingHit = true;\n                hitResult.distance = d;\n                hitResult.impactPoint = cross.clone();\n                const segmentDir = p1.sub(p0).normalize();\n                hitResult.impactNormal = new Vec2(segmentDir.y, -segmentDir.x);\n                hitResult.location = cross.clone();\n                hitResult.normal = new Vec2(segmentDir.y, -segmentDir.x);\n                hitResult.time = d / distance;\n                if (dir.dot(hitResult.impactNormal) > 0) {\n                    hitResult.startPenetrating = true;\n                    hitResult.penetrationDepth = d;\n                }\n            }\n        });\n    }\n\n    return hits;\n}\n\nexport {\n    distToSegment,\n    segmentShortestTest,\n    HitResult,\n    lineSweep,\n    lineSweepMulti\n}\n","// @ts-check\n\nimport Vec2 from \"../../algebra/vec2\";\nimport * as Util from \"./util\";\nimport Scene from \"../scene\";\n\nexport { HitResult } from \"./util\";\n\nexport default class Capsule {\n    /**\n     * @param {Vec2} center\n     * @param {number} halfHeight\n     * @param {number} radius\n     * @param {string} [color]\n     */\n    constructor(center, halfHeight, radius, color = \"#FF00FF\") {\n        this._center = center.clone();\n        this.a = center.sub(new Vec2(0, halfHeight));\n        this.b = center.add(new Vec2(0, halfHeight));\n        this.halfHeight = halfHeight;\n        this.radius = radius;\n        this.color = color;\n    }\n\n    /**\n     * @return {Vec2} center of this capsule\n     */\n    get center() {\n        return this._center.clone();\n    }\n\n    /**\n     * @param {Vec2} center\n     */\n    set center(center) {\n        this._center = center.clone();\n        this.a = center.sub(new Vec2(0, this.halfHeight));\n        this.b = center.add(new Vec2(0, this.halfHeight));\n    }\n\n    /**\n     * draw this polygon\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {string} [color] override color\n     * @param {Vec2} [center] override center\n     * @param {boolean} [drawFrame] is draw frame\n     */\n    draw(ctx, color, center, drawFrame) {\n        const theColor = color || this.color;\n        const theCenter = center || this.center;\n        const a = theCenter.sub(new Vec2(0, this.halfHeight));\n        const b = theCenter.add(new Vec2(0, this.halfHeight));\n\n        ctx.beginPath();\n        ctx.moveTo(a.x - this.radius, a.y);\n        ctx.arcTo(a.x - this.radius, a.y - this.radius, a.x, a.y - this.radius, this.radius);\n        ctx.arcTo(a.x + this.radius, a.y - this.radius, a.x + this.radius, a.y, this.radius);\n        ctx.lineTo(b.x + this.radius, b.y);\n        ctx.arcTo(b.x + this.radius, b.y + this.radius, b.x, b.y + this.radius, this.radius);\n        ctx.arcTo(b.x - this.radius, b.y + this.radius, b.x - this.radius, b.y, this.radius);\n        ctx.closePath();\n        if (drawFrame == true) {\n            ctx.strokeStyle = theColor;\n            ctx.stroke();\n        } else {\n            ctx.fillStyle = theColor;\n            ctx.fill();\n        }\n    }\n\n    /**\n     * @param {Scene} scene\n     * @param {number} [tolerance]\n     * @return {boolean}\n     */\n    overlayTest(scene, tolerance = 0.1) {\n        let overlay = false;\n        for (let polygon of scene.polygons) {\n            polygon.eachSegment((p0, p1) => {\n                if (overlay) {\n                    return;\n                }\n                let result = Util.segmentShortestTest(this.a, this.b, p0, p1);\n                overlay = result.dist < this.radius + tolerance;\n            });\n            if (overlay) {\n                return overlay;\n            }\n        }\n        return overlay;\n    }\n\n    /**\n     * sweep test segment\n     * @param {Vec2} dir sweep direction\n     * @param {number} distance sweep max distance\n     * @param {Vec2} p0 test segment first point\n     * @param {Vec2} p1 test segment second point\n     * @param {number} [tolerance] hit distance tolerance\n     * @return {Util.HitResult} sweep result\n     */\n    sweep(dir, distance, p0, p1, tolerance = 0.1) {\n        dir = dir.normalize();\n        distance = Math.max(0, distance);\n        let testA = this.a.clone();\n        let testB = this.b.clone();\n        const hitResult = new Util.HitResult();\n        hitResult.distance = distance;\n        hitResult.start = this.center;\n        hitResult.end = this.center.add(dir.mul(distance));\n\n        let result = Util.segmentShortestTest(testA, testB, p0, p1);\n        if (result.dist < this.radius + tolerance) {\n            hitResult.blockingHit = true;\n            hitResult.startPenetrating = true;\n            hitResult.time = 0;\n            hitResult.distance = 0;\n            hitResult.penetrationDepth = this.radius + tolerance - result.dist;\n            hitResult.impactNormal = result.pa.sub(result.pb).normalize();\n            if (hitResult.impactNormal.isZero()) {\n                hitResult.impactNormal = this.center.sub(result.pb).normalize();\n            }\n            hitResult.location = this.center;\n            return hitResult;\n        }\n\n        let lastGap = result.dist;\n        let offset = 0;\n        for (let i = 0; i < 5; i++) {\n            offset += Math.max(0, (result.dist - this.radius) / dir.dot(result.pb.sub(result.pa).normalize()));\n            offset = Math.min(distance, offset);\n            testA = this.a.add(dir.mul(offset));\n            testB = this.b.add(dir.mul(offset));\n            result = Util.segmentShortestTest(testA, testB, p0, p1);\n            if (result.dist <= this.radius + tolerance) {\n                hitResult.time = offset / distance;\n                hitResult.distance = offset;\n                hitResult.blockingHit = true;\n                hitResult.impactPoint = result.pb;\n                const segmentDir = p1.sub(p0).normalize();\n                hitResult.impactNormal = new Vec2(segmentDir.y, -segmentDir.x);\n                hitResult.location = this.center.add(dir.mul(offset));\n                hitResult.normal = hitResult.location.sub(hitResult.impactPoint).normalize();\n                return hitResult;\n            } else if (result.dist > lastGap) {\n                break;\n            }\n            lastGap = result.dist;\n        }\n\n        return hitResult;\n    }\n\n    /**\n     * sweep test segment\n     * @param {Vec2} dir sweep direction\n     * @param {number} distance sweep max distance\n     * @param {Scene} scene the scene to been sweeped\n     * @param {number} [tolerance] hit distance tolerance\n     * @return {Util.HitResult} sweep result\n     */\n    sweepScene(dir, distance, scene, tolerance = 0.1) {\n        let hitResult = new Util.HitResult();\n        hitResult.start = this.center;\n        hitResult.end = this.center.add(dir.mul(distance));\n        hitResult.distance = distance;\n        hitResult.time = 1;\n\n        for (let polygon of scene.polygons) {\n            polygon.eachSegment((p0, p1) => {\n                const hit = this.sweep(dir, distance, p0, p1, tolerance);\n                if (hit.blockingHit) {\n                    if (hit.time < hitResult.time) {\n                        hitResult = hit;\n                    } else if (hit.time == hitResult.time) {\n                        if (hit.impactNormal.dot(dir) < hitResult.impactNormal.dot(dir)) {\n                            hitResult = hit;\n                        }\n                    }\n                }\n            });\n        }\n\n        return hitResult;\n    }\n\n    /**\n     * sweep test segment\n     * @param {Vec2} dir sweep direction\n     * @param {number} distance sweep max distance\n     * @param {Scene} scene the scene to been sweeped\n     * @param {number} [tolerance] hit distance tolerance\n     * @return {Util.HitResult[]} sweep result\n     */\n    sweepSceneMulti(dir, distance, scene, tolerance = 0.1) {\n        const results = [];\n        for (let polygon of scene.polygons) {\n            polygon.eachSegment((p0, p1) => {\n                const hit = this.sweep(dir, distance, p0, p1, tolerance);\n                if (hit.blockingHit) {\n                    results.push(hit);\n                }\n            })\n        }\n        return results;\n    }\n}\n","// @ts-check\n\nimport Vec2 from \"../../algebra/vec2\";\n\n/**\n * @typedef {Object} Frame\n * @property {number} idx\n * @property {number} duration\n * @property {Vec2} pivot\n *\n * @typedef {Object} AnimConfig\n * @property {string[]} imageSrcs\n * @property {Frame[]} frames\n */\n\nexport default class AnimeClip {\n    /**\n     *\n     * @param {AnimConfig} config\n     */\n    constructor(config) {\n        /** @type {HTMLImageElement[]} */\n        this.images = [];\n        this.config = config;\n        this.frames = config.frames;\n        this.currentFrameIdx = 0;\n        this.currentDuration = 0;\n    }\n\n    /**\n     * @return {AnimeClip}\n     */\n    clone() {\n        const animeClip = new AnimeClip(this.config);\n        animeClip.images = this.images;\n        return animeClip;\n    }\n\n    loadImages() {\n        for (let src of this.config.imageSrcs) {\n            const image = new Image();\n            this.images.push(image)\n            image.src = src;\n        }\n    }\n\n    reset() {\n        this.currentFrameIdx = 0;\n        this.currentDuration = 0;\n    }\n\n    /**\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {number} dt\n     * @param {boolean} flip\n     * @param {Vec2} pos\n     * @param {number} scale\n     */\n    draw(ctx, dt, flip, pos, scale = 1) {\n        const frame = this.frames[this.currentFrameIdx];\n        const image = this.images[frame.idx];\n        ctx.save()\n        // to get sharp pixel\n        ctx.imageSmoothingEnabled = false;\n        const w = image.width * scale;\n        const h = image.height * scale;\n        const p = frame.pivot.mul(scale);\n        ctx.translate(pos.x, pos.y);\n        if (flip) {\n            ctx.scale(-1, 1)\n        }\n        ctx.drawImage(image, -p.x, -p.y, w, h);\n        ctx.restore();\n        this.currentDuration += dt;\n        let currentMaxDuration = frame.duration;\n        while (this.currentDuration >= currentMaxDuration) {\n            this.currentDuration -= currentMaxDuration;\n            this.currentFrameIdx = (this.currentFrameIdx + 1) % this.frames.length;\n            currentMaxDuration = this.frames[this.currentFrameIdx].duration;\n        }\n    }\n}\n","// @ts-check\n\nimport AnimeClip from \"./animeClip\";\nimport Vec2 from \"../../algebra/vec2\";\n\nexport default class Animator {\n    constructor() {\n        /**@type {Map<string, AnimeClip>} */\n        this.animMap = new Map();\n        this.currentKey = \"\";\n    }\n\n    /**\n     * @return {Animator}\n     */\n    clone() {\n        const animator = new Animator();\n        this.animMap.forEach((animeClip, key) => {\n            animator.addNewAnimeClip(key, animeClip.clone());\n        });\n        return animator;\n    }\n\n    /**\n     *\n     * @param {string} key\n     * @param {AnimeClip} animeClip\n     */\n    addNewAnimeClip(key, animeClip) {\n        this.animMap.set(key, animeClip);\n    }\n\n    /**\n     *\n     * @param {string} key\n     */\n    setAnimeKey(key) {\n        if (key != this.currentKey && this.animMap.has(key)) {\n            const animeClip = this.animMap.get(key);\n            animeClip.reset();\n            this.currentKey = key;\n        }\n    }\n\n    /**\n     * draw anime\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {number} dt\n     * @param {Vec2} pos\n     * @param {boolean} flip\n     * @param {number} scale\n     */\n    draw(ctx, dt, pos, flip, scale = 1) {\n        if (!this.animMap.has(this.currentKey)) {\n            return;\n        }\n        const animeClip = this.animMap.get(this.currentKey);\n        animeClip.draw(ctx, dt, flip, pos, scale);\n    }\n}\n","// @ts-check\nimport Vec2 from \"../algebra/vec2\";\nimport Scene, { DurationType } from \"./scene\";\nimport { Debug } from \"./globals\";\nimport Capsule, { HitResult } from \"./geom/capsule\";\nimport { lineSweep } from \"./geom/util\";\nimport Animator from \"./anim/animator\";\n\nconst Role = {\n    simulate: 0,\n    authority: 1,\n    autonomous: 2,\n}\nObject.freeze(Role);\n\nconst MoveMode = {\n    none: 0,\n    walking: 1,\n    falling: 2,\n}\nObject.freeze(MoveMode);\nconst MOVE_AVOID_DIST = 0.5;\nconst MAX_FLOOR_DIST = 2.4;\nconst MIN_FLOOR_DIST = 1.9;\nconst SWEEP_EDGE_REJECT_DISTANCE = 0.15;\nconst SMALL_NUMBER = 1e-8;\nconst KINDA_SMALL_NUMBER = 1e-4;\nconst MAX_STEP_SIDE_Z = 0.08;\n\nclass FloorResult {\n    constructor() {\n        this.blockingHit = false;\n        this.walkableFloor = false;\n        this.lineTrace = false;\n        this.floorDist = 0;\n        this.lineDist = 0;\n        /** @type {HitResult} */\n        this.hitResult = new HitResult();\n    }\n\n    /**\n     * @param {HitResult} hitResult\n     * @param {number} sweepFloorDist\n     * @param {boolean} isWalkableFloor\n     */\n    setFromSweep(hitResult, sweepFloorDist, isWalkableFloor) {\n        this.blockingHit = hitResult.isValidBlock()\n        this.walkableFloor = isWalkableFloor;\n        this.lineTrace = false;\n        this.floorDist = sweepFloorDist;\n        this.lineDist = 0;\n        this.hitResult = hitResult;\n    }\n\n    /**\n     * @param {HitResult} hitResult\n     * @param {number} sweepFloorDist\n     * @param {number} lineDist\n     * @param {boolean} isWalkableFloor\n     */\n    setFromLineTrace(hitResult, sweepFloorDist, lineDist, isWalkableFloor) {\n        if (this.hitResult.blockingHit && hitResult.blockingHit) {\n            const oldHit = this.hitResult;\n            this.hitResult = hitResult;\n            this.hitResult.time = oldHit.time;\n            this.hitResult.impactPoint = oldHit.impactPoint;\n            this.hitResult.location = oldHit.location;\n            this.hitResult.start = oldHit.start;\n            this.hitResult.end = oldHit.end;\n\n            this.lineTrace = true;\n            this.floorDist = sweepFloorDist;\n            this.lineDist = lineDist;\n            this.walkableFloor = isWalkableFloor;\n        }\n    }\n\n    /**\n     * @return {boolean}\n     */\n    isWalkableFloor() {\n        return this.blockingHit && this.walkableFloor;\n    }\n}\n\nexport {\n    Role,\n}\n\n/**\n * @typedef {Object} PlayerInfo\n * @property {number} id - player id\n * @property {string} color - player color\n * @property {Vec2} pos - player position\n * @property {Animator} animator - animator of player\n * @property {boolean} flipAnime\n *\n * @typedef {Object} MoveMsg\n * @property {number} id\n * @property {number} sequence\n * @property {number} timestamp\n * @property {number} dt\n * @property {Vec2} pos\n * @property {Vec2} velocity\n * @property {number} moveMode\n * @property {Vec2} acceleration\n * @property {boolean} pressedJump\n */\n\nexport default class Player {\n    /**\n     * @param {Vec2} pos\n     * @param {string} color\n     * @param {number} id\n     * @param {boolean} [flipAnime]\n     */\n    constructor(pos, color, id, flipAnime = false) {\n        this.displayPos = pos.clone();\n        this.color = color;\n        this.id = id;\n        this.maxAcceleration = 800;\n        this.maxSpeed = 300;\n        this.capsule = new Capsule(pos, 15, 12, color);\n\n        this.isMainPlayer = false;\n        this.role = Role.authority;\n        this.isNetMode = false;\n\n        this.timestamp = 0;\n        /** @type {any[]} */\n        this.positionBuffer = [];\n        this.hasUpdate = false;\n        this.corrected = false; // server correct client pos and velocity\n        /** @type {Scene}*/\n        this.scene = null;\n        /** @type {Vec2} */\n        this.velocity = new Vec2(0, 0);\n        this.acceleration = new Vec2(0, 0);\n        this.visualSmooth = false;\n        /**@type {Animator} */\n        this.animator = null;\n        this.flipAnime = flipAnime;\n        this.lastMoveMode = MoveMode.none;\n        this.jumpRemainTimer = 0;\n\n        this.movementInfo = {\n            input: new Vec2(),\n            currentModeMode: 2,\n            currentFloor: new FloorResult(),\n            justTeleported: false,\n            pressedJump: false,\n            jumpHoldTime: 0,\n        };\n\n        this.movementConfig  = {\n            walkableFloorRadian: Math.PI * 50 / 180,\n            maxStepHeight: 20,\n            horizontalMove: true,\n            jumpVelocity: 300,\n            holdJumpGravityScale: 0.3,\n            airControl: 0.2,\n            maxJumpHoldTime: 1,\n        };\n\n        this.sequence = 1;\n        this.lastReceiveSequence = 0;\n        this.lastReceiveTimestamp = 0;\n        /**@type {MoveMsg} */\n        this.pendingMoveMsg = null;\n        /**@type {MoveMsg[]} */\n        this.historyMoveMsgs = [];\n        this.needReconciliation = false;\n    }\n\n    /**\n     * @return {Vec2} position of this player\n     */\n    get pos() {\n        return this.capsule.center.clone();\n    }\n\n    /**\n     * @param {Vec2} pos\n     */\n    set pos(pos) {\n        this.capsule.center = pos.clone();\n        if (!this.visualSmooth) {\n            this.displayPos.x = this.pos.x;\n            this.displayPos.y = this.pos.y;\n        }\n    }\n\n    /**\n     * @return {PlayerInfo}\n     */\n    getPlayerInfo() {\n        return {\n            id: this.id,\n            color: this.color,\n            pos: this.pos,\n            animator: this.animator.clone(),\n            flipAnime: this.flipAnime,\n        };\n    }\n\n    /**\n     * @param {Vec2} delta\n     * @return {HitResult}\n     */\n    move(delta) {\n        let hit = this.safeMove(delta);\n        if (hit.startPenetrating) {\n            const pullbackDist = 0.125 + (hit.penetrationDepth > 0 ? hit.penetrationDepth : 0.125);\n            const adjustment = hit.impactNormal.mul(pullbackDist);\n            if (this.resolvePenetration(adjustment, hit)) {\n                hit = this.safeMove(delta);\n            }\n        }\n        return hit;\n    }\n\n    /**\n     * warning! used by move, do not direct call this\n     * @param {Vec2} delta\n     * @return {HitResult}\n     */\n    safeMove(delta) {\n        let result = new HitResult();\n        result.start = this.pos;\n        result.end = this.pos.add(delta);\n\n        const dir = delta.normalize();\n        const length = delta.length();\n        const hitResults = this.capsule.sweepSceneMulti(dir, length, this.scene);\n        let noStartPenetration = true;\n        let init = true;\n        let maxPenetrationDepth = 0;\n        for (let hitResult of hitResults) {\n            if (hitResult.blockingHit) {\n                if (hitResult.time == 0) {\n                    if (hitResult.penetrationDepth > maxPenetrationDepth) {\n                        maxPenetrationDepth = hitResult.penetrationDepth;\n                        noStartPenetration = false;\n                        result = hitResult;\n                    }\n                } else if (noStartPenetration) {\n                    if (init || hitResult.time < result.time) {\n                        result = hitResult;\n                        init = false;\n                    } else if (hitResult.time == result.time) {\n                        if (hitResult.impactNormal.dot(dir) < result.impactNormal.dot(dir)) {\n                            result = hitResult;\n                        }\n                    }\n                }\n            }\n        }\n\n        if (!result.blockingHit) {\n            this.pos = result.end;\n        } else {\n            const realMoveDist = Math.max(0, result.distance - MOVE_AVOID_DIST);\n            this.pos = result.start.add(dir.mul(realMoveDist));\n            result.time = Math.max(0, realMoveDist / result.end.sub(result.start).length());\n        }\n        return result;\n    }\n\n    /**\n     * @param {Vec2} adjustment\n     * @param {HitResult} hit\n     * @return {boolean}\n     */\n    resolvePenetration(adjustment, hit) {\n        const testCapsule = new Capsule(hit.start.add(adjustment), this.capsule.halfHeight, this.capsule.radius);\n        if (!testCapsule.overlayTest(this.scene)) {\n            this.pos = hit.start.add(adjustment);\n            return true;\n        } else {\n            let hit = this.safeMove(adjustment);\n            if (hit.startPenetrating) {\n                const pullbackDist = 0.125 + (hit.penetrationDepth > 0 ? hit.penetrationDepth : 0.125);\n                const secondMTD = hit.impactNormal.mul(pullbackDist);\n                hit = this.safeMove(secondMTD.add(adjustment));\n                if (hit.startPenetrating) {\n                    hit = this.safeMove(adjustment.add(hit.end.sub(hit.start)));\n                    return !hit.startPenetrating;\n                } else {\n                    return true;\n                }\n            } else {\n                return true;\n            }\n        }\n    }\n\n    /**\n     * @param {Vec2} acceleration\n     */\n    setAcceleration(acceleration) {\n        this.acceleration.x = acceleration.x;\n        this.acceleration.y = acceleration.y;\n    }\n\n    /**\n     * @param {Vec2} velocity\n     */\n    setVelocity(velocity) {\n        this.velocity.x = velocity.x;\n        this.velocity.y = velocity.y;\n    }\n\n    clearAcceleration() {\n        this.acceleration.x = 0;\n        this.acceleration.y = 0;\n    }\n\n    /**\n     * @param {number} dt\n     */\n    update(dt) {\n        this.timestamp += dt;\n        if (this.isMainPlayer) {\n            if (this.needReconciliation) {\n                this.reconciliation();\n            }\n            const input = this.consumeMovement();\n            this.acceleration = input.mul(this.maxAcceleration);\n            this.performMovement(dt);\n            if (this.isNetMode) {\n                this.updateMoveMsg(dt);\n            }\n        }\n        else if (this.role == Role.authority) {\n            this.updateMoveMsg();\n        }\n        else if (this.role == Role.simulate) {\n            this.simulateMove(dt);\n        }\n\n        if (Debug.showDebugDraw) {\n            if (this.movementInfo.currentFloor.isWalkableFloor()) {\n                const hitResult = this.movementInfo.currentFloor.hitResult;\n                this.scene.debugDrawArrow(DurationType.oneFrame,\n                    hitResult.impactPoint, hitResult.impactPoint.add(hitResult.impactNormal.mul(50)), 0, \"#c00000\");\n            }\n        }\n    }\n\n    /**\n     * @param {number} min\n     * @param {number} max\n     * @param {number} value\n     * @return {number} clamped value between min and max\n     */\n    clamp(min, max, value) {\n        return Math.min(max, Math.max(value, min));\n    }\n\n    /**\n     * @return {Player} clone this player, but only poisiton, color and id properties\n     */\n    clone() {\n        return new Player(this.pos.clone(), this.color, this.id);\n    }\n\n    /**\n     * draw this polygon\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {number} dt\n     */\n    draw(ctx, dt) {\n        if (Debug.showCapsule) {\n            if (!this.visualSmooth) {\n                this.capsule.draw(ctx);\n            } else {\n                this.capsule.draw(ctx, null, this.displayPos);\n            }\n        }\n        if (this.animator) {\n            let key = \"\";\n            switch (this.movementInfo.currentModeMode) {\n                case MoveMode.walking:\n                    if (this.velocity.x == 0) {\n                        key = \"idle\";\n                    } else {\n                        key = \"walking\";\n                    }\n                    break;\n                case MoveMode.falling:\n                    if (this.lastMoveMode == MoveMode.walking) {\n                        key = \"jump\";\n                        this.jumpRemainTimer = 0.18;// jump anime clip total duration\n                        this.jumpRemainTimer -= dt;\n                    } else if (this.jumpRemainTimer > 0) {\n                        this.jumpRemainTimer -= dt;\n                        key = \"jump\";\n                    } else {\n                        key = \"falling\";\n                    }\n                    break;\n                default:\n                    break;\n            }\n            this.lastMoveMode = this.movementInfo.currentModeMode;\n            if (this.velocity.x > 0) {\n                this.flipAnime = false;\n            } else if (this.velocity.x < 0) {\n                this.flipAnime = true;\n            }\n            this.animator.setAnimeKey(key);\n            this.animator.draw(ctx, dt, this.pos, this.flipAnime, 2);\n        }\n        if (Debug.showPos) {\n            this.capsule.draw(ctx, \"#C00000\", null, true);\n        }\n    }\n\n    /**\n     * add movement\n     * @param {Vec2} input\n     */\n    addMovement(input) {\n        this.movementInfo.input = this.movementInfo.input.add(input);\n    }\n\n    /**\n     * @return {Vec2} input\n     */\n    consumeMovement() {\n        const input = this.movementInfo.input;\n        this.movementInfo.input = new Vec2();\n        return input;\n    }\n\n    jump() {\n        // TODO: deal with double jump\n        if (this.movementInfo.currentModeMode != MoveMode.falling) {\n            this.movementInfo.pressedJump = true;\n        }\n    }\n\n    stopJumping() {\n        this.movementInfo.pressedJump = false;\n    }\n\n    checkJump() {\n        if (this.movementInfo.currentModeMode == MoveMode.walking) {\n            if (this.movementInfo.pressedJump == true) {\n                this.velocity.y = Math.min(this.velocity.y, -this.movementConfig.jumpVelocity);\n                this.movementInfo.jumpHoldTime = 0;\n                this.setMoveMode(MoveMode.falling);\n            }\n        }\n    }\n\n    /**\n     * @param {number} dt\n     */\n    clearJump(dt) {\n        if (this.movementInfo.pressedJump) {\n            this.movementInfo.jumpHoldTime += dt;\n            if (this.movementInfo.jumpHoldTime >= this.movementConfig.maxJumpHoldTime) {\n                this.movementInfo.pressedJump = false;\n            }\n        }\n    }\n\n    /**\n     * @param {number} dt delta time\n     */\n    performMovement(dt) {\n        this.checkJump();\n        this.clearJump(dt);\n        this.startNewPhysics(dt);\n    }\n\n    /**\n     * @param {number} dt delta time\n     */\n    startNewPhysics(dt) {\n        switch (this.movementInfo.currentModeMode) {\n            case MoveMode.falling:\n                this.physFalling(dt);\n                break;\n            case MoveMode.walking:\n                this.physWalking(dt);\n                break;\n            default:\n                this.velocity = new Vec2();\n                break;\n        }\n    }\n\n\n    /**\n     * set new move mode\n     * @param {number} moveMode\n     */\n    setMoveMode(moveMode) {\n        if (moveMode != this.movementInfo.currentModeMode) {\n            this.movementInfo.currentModeMode = moveMode;\n            this.onMoveModeChange();\n        }\n    }\n\n    /**\n     * called when movemode change\n     */\n    onMoveModeChange() {\n        if (this.movementInfo.currentModeMode == MoveMode.walking) {\n            this.movementInfo.currentFloor = this.findFloor(this.capsule.center, null);\n            this.adjustFloorHeight();\n        }\n    }\n\n    /**\n     * Test if hit location is walkable\n     * @param {HitResult} hit\n     * @return {boolean}\n     */\n    isWalkable(hit) {\n        if (!hit.isValidBlock()) {\n            return false;\n        }\n        if (-hit.impactNormal.y < KINDA_SMALL_NUMBER) {\n            return false;\n        }\n        return -hit.impactNormal.y >= Math.cos(this.movementConfig.walkableFloorRadian);\n    }\n\n    /**\n     *\n     * @param {Vec2} capsuleCenter\n     * @param {Vec2} impactPoint\n     * @param {number} radius\n     * @return {boolean}\n     */\n    isWithinEdgeTolerance(capsuleCenter, impactPoint, radius) {\n        if (Math.abs(impactPoint.x - capsuleCenter.x) > Math.max(SWEEP_EDGE_REJECT_DISTANCE, radius - SWEEP_EDGE_REJECT_DISTANCE)) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * perform falling movement\n     * @param {number} dt delta time\n     */\n    physFalling(dt) {\n        /**\n         * Test if hit location is a valid landing spot\n         * @param {Vec2} capsuleCenter\n         * @param {HitResult} hit\n         * @return {boolean}\n         */\n        const isValidLandingSpot = (capsuleCenter, hit) => {\n            if (!hit.blockingHit) {\n                return false;\n            }\n            if (!hit.startPenetrating) {\n                if (!this.isWalkable(hit)) {\n                    return false;\n                }\n                if (hit.impactPoint.y <= capsuleCenter.y + this.capsule.radius) {\n                    return false;\n                }\n                if (!this.isWithinEdgeTolerance(hit.location, hit.impactPoint, this.capsule.radius)) {\n                    return false;\n                }\n            } else {\n                if (-hit.normal.y < KINDA_SMALL_NUMBER) {\n                    return false;\n                }\n            }\n            // TODO: FindFlooor\n            const floorResult = this.findFloor(capsuleCenter, hit);\n            if (floorResult.isWalkableFloor()) {\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * compute slide vector\n         * @param {Vec2} delta\n         * @param {number} time\n         * @param {Vec2} normal\n         * @return {Vec2} slide vector\n         */\n        const computeSlideVector = (delta, time, normal) => {\n            let result = delta.planeProject(normal).mul(time);\n            if (result.y < 0) {\n                const slideResult = result.clone();\n                const yLimit = delta.y * time;\n                if (result.y - yLimit < -KINDA_SMALL_NUMBER) {\n                    if (yLimit < 0) {\n                        result = result.mul(yLimit / result.y);\n                    } else {\n                        result = new Vec2();\n                    }\n\n                    const remainderX = new Vec2(slideResult.sub(result).x, 0);\n                    const normalX = new Vec2(Math.sign(normal.x), 0);\n                    const adjust = remainderX.planeProject(normalX);\n                    result = result.add(adjust);\n                }\n            }\n            return result;\n        }\n\n        const fallAcceleration = this.acceleration.clone();\n        fallAcceleration.y = 0;\n        fallAcceleration.x *= this.movementConfig.airControl;\n        const gravity = new Vec2(0, 980);\n        if (this.movementInfo.pressedJump) {\n            gravity.y *= this.movementConfig.holdJumpGravityScale;\n        }\n        const oldVelocity = this.velocity.clone();\n        this.velocity = this.velocity.add(gravity.add(fallAcceleration).mul(dt));\n        let adjusted = oldVelocity.add(this.velocity).mul(0.5 * dt);\n        let hit = this.move(adjusted);\n        if (hit.blockingHit) {\n            let remainTime = dt * (1 - hit.time);\n            if (isValidLandingSpot(this.capsule.center, hit)) {\n                this.setMoveMode(MoveMode.walking);\n                this.startNewPhysics(remainTime);\n                return;\n            } else {\n                adjusted = this.velocity.mul(dt);\n                // TODO: additional valid landing check\n                const oldHitNormal = hit.normal.clone();\n                const oldHitImpackNormal = hit.impactNormal.clone();\n                let slideDelta = computeSlideVector(adjusted, 1 - hit.time, oldHitImpackNormal);\n                this.velocity = slideDelta.div(remainTime);\n                if (remainTime > 0.0001 && slideDelta.dot(adjusted) > 0) {\n                    hit = this.move(slideDelta);\n                    if (hit.blockingHit) {\n                        remainTime = remainTime * (1 - hit.time);\n                        if (isValidLandingSpot(this.capsule.center, hit)) {\n                            this.setMoveMode(MoveMode.walking);\n                            this.startNewPhysics(remainTime);\n                            return;\n                        }\n                        // TODO: TwoWallAdjust\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {Vec2} capsuleCenter\n     * @param {HitResult} downSweepResult\n     * @return {FloorResult}\n     */\n    findFloor(capsuleCenter, downSweepResult) {\n        const floorResult = this.computeFloorDist(capsuleCenter, downSweepResult);\n        if (floorResult && floorResult.blockingHit && !floorResult.lineTrace) {\n            if (!this.isWithinEdgeTolerance(capsuleCenter, floorResult.hitResult.impactPoint, this.capsule.radius)) {\n                floorResult.walkableFloor = false;\n            }\n            if (floorResult.floorDist < 0) {\n                floorResult.walkableFloor = false;\n            }\n        }\n        return floorResult;\n    }\n\n    /**\n     * @param {Vec2} capsuleCenter\n     * @param {HitResult} downSweepResult\n     * @return {FloorResult}\n     */\n    computeFloorDist(capsuleCenter, downSweepResult) {\n        const heightCheckAdjust = this.movementInfo.currentModeMode == MoveMode.walking ? -MAX_FLOOR_DIST - KINDA_SMALL_NUMBER : MAX_FLOOR_DIST;\n        const sweepRadius = this.capsule.radius;\n        const capsuleRadius = sweepRadius;\n        const sweepTraceDist = Math.max(MAX_FLOOR_DIST, this.movementConfig.maxStepHeight + heightCheckAdjust);\n        const lineTraceDist = sweepTraceDist;\n        const floorResult = new FloorResult();\n\n        let skipSweep = false;\n        // compute floor dist\n        if (downSweepResult && downSweepResult.isValidBlock()) {\n            if (downSweepResult.start.y < downSweepResult.end.y && downSweepResult.distance > 0) {\n                if (this.isWithinEdgeTolerance(downSweepResult.location, downSweepResult.impactPoint, this.capsule.radius)) {\n                    skipSweep = true;\n                    const isWalkable = this.isWalkable(downSweepResult);\n                    const floorDist = downSweepResult.location.y - capsuleCenter.y;\n                    floorResult.setFromSweep(downSweepResult, floorDist, isWalkable);\n                    if (isWalkable) {\n                        return floorResult;\n                    }\n                }\n            }\n        }\n\n        if (!skipSweep && sweepTraceDist > 0 && sweepRadius > 0) {\n            const shrinkScale = 0.9;\n            const shrinkScaleOverlap = 0.1;\n            let shrinkHeight = this.capsule.halfHeight * (1 - shrinkScale);\n            let traceDist = sweepTraceDist + shrinkHeight;\n            const sweepCapsule = new Capsule(capsuleCenter, this.capsule.halfHeight - shrinkHeight, capsuleRadius);\n            let hit = sweepCapsule.sweepScene(new Vec2(0, 1), traceDist, this.scene);\n            if (hit.blockingHit) {\n                if (hit.startPenetrating || !this.isWithinEdgeTolerance(capsuleCenter, hit.impactPoint, capsuleRadius)) {\n                    sweepCapsule.radius = Math.max(0, capsuleRadius - SWEEP_EDGE_REJECT_DISTANCE - KINDA_SMALL_NUMBER);\n                    if (sweepCapsule.radius > KINDA_SMALL_NUMBER) {\n                        shrinkHeight = this.capsule.halfHeight * (1 - shrinkScaleOverlap);\n                        traceDist = sweepTraceDist + shrinkHeight;\n                        sweepCapsule.halfHeight = Math.max(0, this.capsule.halfHeight - shrinkHeight);\n                        hit = sweepCapsule.sweepScene(new Vec2(0, 1), traceDist, this.scene);\n                    }\n                }\n\n                const maxPenetrationAdjust = Math.max(MAX_FLOOR_DIST, capsuleRadius);\n                const sweepResultDist = Math.max(-maxPenetrationAdjust, hit.time * traceDist - shrinkHeight);\n                floorResult.setFromSweep(hit, sweepResultDist, false);\n                if (hit.isValidBlock() && this.isWalkable(hit)) {\n                    floorResult.walkableFloor = true;\n                    return floorResult;\n                }\n            }\n        }\n\n        if (!floorResult.blockingHit && !floorResult.hitResult.startPenetrating) {\n            floorResult.floorDist = sweepTraceDist;\n            return floorResult;\n        }\n\n        if (lineTraceDist > 0) {\n            const shrinkHeight = this.capsule.halfHeight + capsuleRadius;\n            const lineStart = capsuleCenter.clone();\n            const traceDist = lineTraceDist + shrinkHeight;\n            const hit = lineSweep(lineStart, new Vec2(0, 1), traceDist, this.scene);\n            if (hit.blockingHit && hit.time > 0) {\n                const maxPenetrationAdjust = Math.max(MAX_FLOOR_DIST, capsuleRadius);\n                const lineResultDist = Math.max(-maxPenetrationAdjust, hit.time * traceDist - shrinkHeight);\n                floorResult.blockingHit = true;\n                if (lineResultDist <= lineTraceDist && this.isWalkable(hit)) {\n                    floorResult.setFromLineTrace(hit, floorResult.floorDist, lineResultDist, true);\n                    return floorResult;\n                }\n            }\n\n        }\n\n        floorResult.walkableFloor = false;\n        floorResult.floorDist = sweepTraceDist;\n        return floorResult;\n    }\n\n    /**\n     * @param {Vec2} velocity\n     * @param {number} dt\n     * @return {FloorResult}\n     */\n    moveAlongFloor(velocity, dt) {\n        /**\n         * compute ground delta\n         * @param {Vec2} delta\n         * @param {HitResult} hit\n         * @param {boolean} isLineTrace\n         */\n        const computeGroundMoveDelta = (delta, hit, isLineTrace) => {\n            const floorNormal = hit.impactNormal;\n            const contactNormal = hit.normal;\n            if (-floorNormal.y < 1 - KINDA_SMALL_NUMBER && -floorNormal.y > KINDA_SMALL_NUMBER &&\n                -contactNormal.y > KINDA_SMALL_NUMBER && !isLineTrace && this.isWalkable(hit)) {\n                const floorDotDelta = floorNormal.dot(delta);\n                const rampDelta = new Vec2(delta.x, -floorDotDelta / floorNormal.y);\n                if (this.movementConfig.horizontalMove) {\n                    return rampDelta;\n                } else {\n                    return rampDelta.normalize().mul(delta.length());\n                }\n            }\n            return delta.clone();\n        };\n\n        if (!this.movementInfo.currentFloor.isWalkableFloor()) {\n            return null;\n        }\n        const currentFloor = this.movementInfo.currentFloor;\n        const delta = new Vec2(velocity.x, 0).mul(dt);\n        let rampVector = computeGroundMoveDelta(delta, currentFloor.hitResult, currentFloor.lineTrace);\n        let hit = this.move(rampVector);\n        if (hit.startPenetrating) {\n            console.warn(\"fuck! i dont know how to deal with it!\");\n        } else if (hit.isValidBlock()) {\n            let percentTimeApplied = hit.time;\n            // another ramp\n            if (hit.time > 0 && -hit.normal.y > KINDA_SMALL_NUMBER && this.isWalkable(hit)) {\n                const initPercentRemain = 1 - percentTimeApplied;\n                rampVector = computeGroundMoveDelta(delta.mul(initPercentRemain), hit, false);\n                hit = this.move(rampVector);\n                const secondPercent = hit.time * initPercentRemain;\n                percentTimeApplied = Math.max(0, Math.min(1, percentTimeApplied + secondPercent));\n            }\n            // block by stairs\n            if (hit.isValidBlock()) {\n                let floorResult = this.stepUp(delta.mul(1 - percentTimeApplied), hit);\n                if (floorResult != null) {\n                    this.movementInfo.justTeleported = this.movementInfo.justTeleported\n                        || !this.movementConfig.horizontalMove;\n                    return floorResult;\n                }\n            }\n        }\n        return null;\n    }\n\n    /**\n     * try step up a stairs\n     * @param {Vec2} delta\n     * @param {HitResult} hit\n     * @return {FloorResult}\n     */\n    stepUp(delta, hit) {\n        const capsuleRadius = this.capsule.radius;\n        const capsuleHalfHeight = this.capsule.halfHeight;\n        const oldLocation = this.pos;\n        const initImpactY = hit.impactPoint.y;\n        // skip if top hemisphere hit\n        if (initImpactY < oldLocation.y - capsuleHalfHeight) {\n            return null;\n        }\n        const gravityDir = new Vec2(0, 1);\n        let stepTravelUpHeight = this.movementConfig.maxStepHeight;\n        let stepTravelDownHeight = stepTravelUpHeight;\n        const stepSideY = -1 * hit.impactNormal.dot(gravityDir);\n        let capsuleInitFloorBaseY = oldLocation.y + capsuleHalfHeight + capsuleRadius;\n        let capsuleFloorPointY = capsuleInitFloorBaseY;\n        const currentFloor = this.movementInfo.currentFloor;\n        if (currentFloor.isWalkableFloor()) {\n            const floorDist = Math.max(0, currentFloor.lineTrace ? currentFloor.lineDist : currentFloor.floorDist);\n            capsuleInitFloorBaseY += floorDist;\n            stepTravelUpHeight = Math.max(stepTravelUpHeight - floorDist, 0);\n            stepTravelDownHeight = this.movementConfig.maxStepHeight + MAX_FLOOR_DIST * 2;\n            const hitVerticalFace = !this.isWithinEdgeTolerance(hit.location, hit.impactPoint, capsuleRadius);\n            if (!currentFloor.lineTrace && !hitVerticalFace) {\n                capsuleFloorPointY = currentFloor.hitResult.impactPoint.y;\n            } else {\n                capsuleFloorPointY += currentFloor.floorDist;\n            }\n        }\n\n        if (initImpactY >=capsuleInitFloorBaseY) {\n            return null;\n        }\n        // try step up\n        const savedPos = this.pos.clone();\n        const sweepUpHit = this.move(gravityDir.mul(-stepTravelUpHeight));\n        if (sweepUpHit.startPenetrating) {\n            this.pos = savedPos;\n            return null;\n        }\n        // try step forward\n        const sweepForwardHit = this.move(delta.add(new Vec2(MOVE_AVOID_DIST * 4 * Math.sign(delta.x), 0)));\n        if (sweepForwardHit.blockingHit) {\n            if (sweepForwardHit.startPenetrating || sweepForwardHit.time == 0 || Math.abs(this.pos.x - savedPos.x) < Math.abs(delta.x)) {\n                this.pos = savedPos;\n                return null;\n            }\n            // TODO: slide along surface\n        }\n        // try step down\n        const sweepDownHit = this.move(gravityDir.mul(stepTravelDownHeight));\n        if (sweepDownHit.startPenetrating) {\n            this.pos = savedPos;\n            return null;\n        }\n        if (sweepDownHit.isValidBlock()) {\n            const deltaY = sweepDownHit.impactPoint.y - capsuleFloorPointY;\n            if (-deltaY > this.movementConfig.maxStepHeight) {\n                this.pos = savedPos;\n                return null;\n            }\n            if (!this.isWalkable(sweepDownHit)) {\n                // if (sweepDownHit.impactNormal.dot(delta) < 0) {\n                //     this.pos = savedPos;\n                //     return null;\n                // }\n                if (sweepDownHit.location.y > oldLocation.y) {\n                    this.pos = savedPos;\n                    return null;\n                }\n            }\n            if (!this.isWithinEdgeTolerance(sweepDownHit.location, sweepDownHit.impactPoint, capsuleRadius)) {\n                this.pos = savedPos;\n                return null;\n            }\n            const floorResult = this.findFloor(this.pos, sweepDownHit);\n            if (sweepDownHit.location.y < oldLocation.y) {\n                if (!floorResult.blockingHit && stepSideY < MAX_STEP_SIDE_Z) {\n                    this.pos = savedPos;\n                    return null;\n                }\n            }\n            this.movementInfo.justTeleported = this.movementInfo.justTeleported\n                || !this.movementConfig.horizontalMove;\n            return floorResult;\n        }\n        return null;\n    }\n\n    /**\n     * perform walking movement\n     * @param {number} dt delta time\n     */\n    physWalking(dt) {\n\n        /**\n         * @param {number} dt\n         * @return {Vec2}\n         */\n        const calcVelocity = (dt) => {\n            if (this.acceleration.x == 0) {\n                return new Vec2(0, this.velocity.y);\n            }\n            const result = new Vec2(dt * this.acceleration.x + this.velocity.x, this.velocity.y);\n            if (Math.abs(result.x) > this.maxSpeed) {\n                result.x = Math.sign(result.x) * this.maxSpeed;\n            }\n            return result;\n        };\n\n        this.movementInfo.justTeleported = false;\n        const oldLocation = this.pos.clone();\n        this.maintainHorizontalVelocity();\n        const oldVelocity = this.velocity.clone();\n        this.acceleration.y = 0;\n        this.velocity = calcVelocity(dt);\n        const moveVelocity = this.velocity.clone();\n        const delta = moveVelocity.mul(dt);\n        if (delta.isZero()) {\n            return;\n        }\n        let floorResult = this.moveAlongFloor(moveVelocity, dt);\n        if (this.movementInfo.currentModeMode == MoveMode.falling) {\n            const actualDist = Math.abs(this.pos.sub(oldLocation).x);\n            const desiredDist = Math.abs(delta.x);\n            this.startNewPhysics(dt * (1 - Math.min(1, actualDist / desiredDist)));\n            return;\n        }\n        if (floorResult) {\n            this.movementInfo.currentFloor = floorResult;\n        } else {\n            this.movementInfo.currentFloor = this.findFloor(this.capsule.center, null);\n        }\n\n        if (this.movementInfo.currentFloor.isWalkableFloor()) {\n            this.adjustFloorHeight();\n        } else if (this.movementInfo.currentFloor.hitResult.startPenetrating) {\n            console.warn(\"shit! i dont know how to deal with penetrating\");\n        } else {\n            this.setMoveMode(MoveMode.falling);\n        }\n        if (!this.movementInfo.justTeleported) {\n            this.velocity = this.pos.sub(oldLocation).div(dt);\n        }\n        if (this.movementInfo.currentModeMode == MoveMode.falling) {\n            this.pos = this.pos.add(this.velocity.normalize().mul(0.15));\n        }\n        this.maintainHorizontalVelocity();\n    }\n\n    /**\n     * maintain horizontal velocity according to movement config `horizontalMove`\n     */\n    maintainHorizontalVelocity() {\n        if (this.velocity.y != 0) {\n            if (this.movementConfig.horizontalMove) {\n                this.velocity.y = 0;\n            } else {\n                this.velocity.x = this.velocity.length();\n                this.velocity.y = 0;\n            }\n        }\n    }\n\n    adjustFloorHeight() {\n        let oldFloorDist = this.movementInfo.currentFloor.floorDist;\n        if (this.movementInfo.currentFloor.lineTrace) {\n            oldFloorDist = this.movementInfo.currentFloor.lineDist;\n        }\n        if (oldFloorDist < MIN_FLOOR_DIST || oldFloorDist > MAX_FLOOR_DIST) {\n            const initY = this.pos.y;\n            const avgFloorDist = (MIN_FLOOR_DIST + MAX_FLOOR_DIST) * 0.5;\n            const moveDist = -(avgFloorDist - oldFloorDist);\n            const hit = this.move(new Vec2(0, moveDist));\n            if (!hit.isValidBlock()) {\n                this.movementInfo.currentFloor.floorDist += moveDist;\n            } else if (moveDist < 0) {\n                const currentY = this.pos.y;\n                this.movementInfo.currentFloor.floorDist += currentY - initY;\n            } else {\n                const currentY = this.pos.y;\n                this.movementInfo.currentFloor.floorDist = currentY - hit.location.y;\n                if (this.isWalkable(hit)) {\n                    this.movementInfo.currentFloor.setFromSweep(hit, this.movementInfo.currentFloor.floorDist, true);\n                }\n            }\n            this.movementInfo.justTeleported = this.movementInfo.justTeleported\n                || !this.movementConfig.horizontalMove || oldFloorDist < 0;\n        }\n    }\n\n    clearNetState() {\n        this.lastReceiveSequence = 0;\n        this.historyMoveMsgs = [];\n    }\n\n    /**\n     * @return {number}\n     */\n    generateSequence() {\n        const newSequence = this.sequence;\n        this.sequence++;\n        return newSequence;\n    }\n\n    /**\n     *\n     * @param {number} dt\n     */\n    updateMoveMsg(dt = 0) {\n        let newSequence;\n        if (this.role == Role.authority) {\n            newSequence = this.lastReceiveSequence;\n        } else {\n            newSequence = this.generateSequence();\n        }\n        this.pendingMoveMsg = {\n            id: this.id,\n            sequence: newSequence,\n            timestamp: this.timestamp,\n            dt: dt,\n            pos: this.pos.clone(),\n            velocity: this.velocity.clone(),\n            moveMode: this.movementInfo.currentModeMode,\n            acceleration: this.acceleration.clone(),\n            pressedJump: this.movementInfo.pressedJump,\n        }\n        if (this.role == Role.autonomous) {\n            this.historyMoveMsgs.push(this.pendingMoveMsg);\n        }\n    }\n\n    /**\n     * @return {MoveMsg}\n     */\n    consumeMoveMsg() {\n        const moveMsg = this.pendingMoveMsg;\n        this.pendingMoveMsg = null;\n        return moveMsg;\n    }\n\n    /**\n     *\n     * @param {MoveMsg} moveMsg\n     */\n    onMainPlayerReceiveServerMove(moveMsg) {\n        if (this.role != Role.autonomous) {\n            console.warn(\"onMainPlayerReceiveServerMove should only call on autonomous players\");\n            return;\n        }\n        if (moveMsg.sequence <= this.lastReceiveSequence) {\n            return;\n        }\n        this.lastReceiveSequence = moveMsg.sequence;\n        const idx = this.historyMoveMsgs.findIndex(msg => msg.sequence == moveMsg.sequence);\n        if (idx != -1) {\n            const lastMsg = this.historyMoveMsgs[idx];\n            this.historyMoveMsgs.splice(0, idx + 1);\n            if (lastMsg.pos.sub(moveMsg.pos).length() > 20) {\n                this.pos = moveMsg.pos;\n                this.velocity = moveMsg.velocity;\n                this.movementInfo.currentModeMode = moveMsg.moveMode;\n                this.needReconciliation = true;\n            }\n        }\n    }\n\n    reconciliation() {\n        this.needReconciliation = false;\n        const savedPressedJump = this.movementInfo.pressedJump;\n        for (let moveMsg of this.historyMoveMsgs) {\n            this.acceleration = moveMsg.acceleration.clone();\n            this.movementInfo.pressedJump = moveMsg.pressedJump;\n            this.performMovement(moveMsg.dt);\n            moveMsg.pos = this.pos.clone();\n            moveMsg.velocity = this.velocity.clone();\n            moveMsg.moveMode = this.movementInfo.currentModeMode;\n        }\n        this.movementInfo.pressedJump = savedPressedJump;\n    }\n\n    /**\n     *\n     * @param {MoveMsg} moveMsg\n     */\n    serverMove(moveMsg) {\n        if (this.role != Role.authority) {\n            console.warn(\"ServerMove should only call on authority players\");\n            return;\n        }\n        if (moveMsg.sequence <= this.lastReceiveSequence) {\n            return;\n        }\n        let dt = moveMsg.dt;\n        if (this.lastReceiveTimestamp != 0) {\n            dt = moveMsg.timestamp - this.lastReceiveTimestamp;\n        }\n        this.lastReceiveSequence = moveMsg.sequence;\n        this.lastReceiveTimestamp = moveMsg.timestamp;\n        this.acceleration = moveMsg.acceleration.clone();\n        this.movementInfo.pressedJump = moveMsg.pressedJump;\n        this.performMovement(dt);\n    }\n\n    /**\n     *\n     * @param {MoveMsg} moveMsg\n     */\n    onReplicateMove(moveMsg) {\n        if (this.role != Role.simulate) {\n            console.warn(\"OnReplicateMove should only call on simulate players\");\n            return;\n        }\n        // discard delay or duplicate message\n        if (moveMsg.sequence <= this.lastReceiveSequence) {\n            return;\n        }\n        this.lastReceiveSequence = moveMsg.sequence;\n        this.pos = moveMsg.pos.clone();\n        this.velocity = moveMsg.velocity.clone();\n        this.movementInfo.currentModeMode = moveMsg.moveMode;\n    }\n\n    /**\n     *\n     * @param {number} dt\n     */\n    simulateMove(dt) {\n        //TODO: need more complex simulate\n        this.move(this.velocity.mul(dt));\n    }\n}\n","// @ts-check\n\nimport { KeyStates as GlobalKeyState } from \"../globals\";\n\nexport default class InputSystem {\n\n    /**\n     * @param {Object} [keyStates]\n     */\n    constructor(keyStates = GlobalKeyState) {\n        this.lastKeyStates = Object.assign({}, keyStates);\n        this.currentKeyStates = Object.assign({}, keyStates);\n        this.keyStates = keyStates;\n        /** @type {Map<string, string>} */\n        this.actionMap = new Map();\n\n        /** @type {string} */\n        this.forwardPositive = null;\n        /** @type {string} */\n        this.forwardNegative = null;\n        /** @type {string} */\n        this.rightPositive = null;\n        /** @type {string} */\n        this.rightNegative = null;\n    }\n\n    /**\n     * update key state\n     */\n    updateState() {\n        this.lastKeyStates = this.currentKeyStates;\n        this.currentKeyStates = Object.assign({}, this.keyStates);\n    }\n\n    /**\n     * @param {string} key\n     * @return {boolean} is key down?\n     */\n    _getKeydown(key) {\n        return !this.lastKeyStates[key] && this.currentKeyStates[key];\n    }\n\n    /**\n     * @param {string} key\n     * @return {boolean} is key up?\n     */\n    _getKeyup(key) {\n        return this.lastKeyStates[key] && !this.currentKeyStates[key];\n    }\n\n    /**\n     * @param {string} key\n     * @return {boolean} is key pressed?\n     */\n    _getKey(key) {\n        return this.currentKeyStates[key] && true; // convert to boolean\n    }\n\n    /**\n     * set an action\n     * @param {string} name\n     * @param {string} key\n     */\n    setAction(name, key) {\n        this.actionMap.set(name, key);\n    }\n\n    /**\n     * @param {string} name\n     * @return {boolean} is action down?\n     */\n    getActionDown(name) {\n        const key = this.actionMap.get(name);\n        return this._getKeydown(key);\n    }\n\n    /**\n     * @param {string} name\n     * @return {boolean} is action up?\n     */\n    getActionUp(name) {\n        const key = this.actionMap.get(name);\n        return this._getKeyup(key);\n    }\n\n    /**\n     * set axis keys\n     * @param {string} forwardPositive\n     * @param {string} forwardNegative\n     * @param {string} rightPositive\n     * @param {string} rightNegative\n     */\n    setAxis(forwardPositive, forwardNegative, rightPositive, rightNegative) {\n        this.forwardPositive = forwardPositive;\n        this.forwardNegative = forwardNegative;\n        this.rightPositive = rightPositive;\n        this.rightNegative = rightNegative;\n    }\n\n    /**\n     * @return {number} forward value\n     */\n    getForward() {\n        let forward = 0.0;\n        forward += this._getKey(this.forwardPositive) ? 1 : 0;\n        forward -= this._getKey(this.forwardNegative) ? 1 : 0;\n        return forward;\n    }\n\n    /**\n     * @return {number} right value\n     */\n    getRight() {\n        let right = 0.0;\n        right += this._getKey(this.rightPositive) ? 1 : 0;\n        right -= this._getKey(this.rightNegative) ? 1 : 0;\n        return right;\n    }\n\n}\n","// @ts-check\n\nimport { Time } from \"./globals\";\nimport Player from \"./player\";\nimport Scene from \"./scene\";\nimport Polygon from \"./geom/polygon\";\nimport Vec2 from \"../algebra/vec2\";\n\nexport default class Instance {\n    /**\n     * @param {HTMLCanvasElement} canvas\n     */\n    constructor(canvas) {\n        this.canvas = canvas;\n\n        this.ctx = canvas.getContext(\"2d\");\n        this.width = canvas.width;\n        this.height = canvas.height;\n        this.scene = new Scene(this.width, this.height);\n        this.scene.addPolygon(new Polygon([\n            new Vec2(0, 350),new Vec2(50, 350), new Vec2(150, 450), new Vec2(300, 450), new Vec2(300, 440), new Vec2(350, 440), new Vec2(350, 430),\n            new Vec2(400, 430),\n            new Vec2(500, 400), new Vec2(500, 350), new Vec2(600, 350), new Vec2(600, 500), new Vec2(0, 500)\n        ], \"#994639\"));\n        this.lastTime = 0;\n        this.currentTime = 0;\n        /**@type {Player[]} */\n        this.players = [];\n    }\n\n    /**\n     * draw scene and players\n     * @param {number} dt\n     */\n    draw(dt) {\n        this.scene.draw(this.ctx);\n        for (let player of this.players) {\n            player.draw(this.ctx, dt);\n        }\n        this.scene.drawDebug(this.ctx);\n    }\n\n    /**\n     * @param {number} dt\n     */\n    update(dt) {\n        this.scene.update(dt);\n        for (let player of this.players) {\n            player.update(dt);\n        }\n    }\n\n    /**\n     * add a new player into secne\n     * @param {Player} player\n     */\n    addNewPlayer(player) {\n        player.scene = this.scene;\n        this.players.push(player);\n    }\n\n    /**\n     * set instance update\n     * @param {number} interval\n     */\n    setUpdate(interval) {\n        this.interval = interval;\n    }\n\n    tryUpdate() {\n        if (Time.currentUnscaleTime != Time.lastUnscaleTime) {\n            let unscaleDt = Time.currentUnscaleTime - this.lastTime;\n            if (unscaleDt >= this.interval) {\n                this.currentTime += this.interval * Time.scale;\n                const dt = this.interval * 0.001 * Time.scale;\n                this.update(dt);\n                this.draw(dt);\n                this.lastTime = Time.currentUnscaleTime - unscaleDt + this.interval;\n            }\n        } else {\n            this.lastTime = Time.currentUnscaleTime;\n            this.currentTime = Time.currentTime;\n        }\n    }\n}\n\nInstance.showRecvPos = false;\nInstance.showPos = false;\n","// @ts-check\n\nimport Instance from \"../core/instance\";\n\n/**\n * @typedef {Object} ChannelPackege\n * @property {number} validTime - package valid dequeue time\n * @property {any} payload - package payload\n */\n\nexport default class Channel {\n    /**\n     * @param {Instance} sender\n     * @param {Instance} receiver\n     * @param {number} lag\n     * @param {number} lagVariance\n     * @param {number} loss\n     */\n    constructor(sender, receiver, lag = 0, lagVariance = 0, loss = 0) {\n        this.sender = sender;\n        this.receiver = receiver;\n        /** @type {ChannelPackege[]} */\n        this.queue = [];\n        this.lag = lag;\n        this.lagVariance = lagVariance;\n        this.loss = loss;\n    }\n\n    /**\n     * @param {number} time\n     * @param {any} message\n     */\n    push(time, message) {\n        if (Math.random() >= this.loss) {\n            this.queue.push({\n                validTime: time + Math.max(0, this.lag + Math.random() * this.lagVariance * 2 - this.lagVariance),\n                payload: message\n            });\n        }\n    }\n\n    /**\n     * @param {number} now\n     * @return {any} fetch latest message\n     */\n    fetch(now) {\n        let idx = -1;\n        let minTime = now;\n        for (let i = 0; i < this.queue.length; i++) {\n            const item = this.queue[i];\n            if (item.validTime <= minTime) {\n                minTime = item.validTime;\n                idx = i;\n            }\n        }\n        if (idx == -1) {\n            return null;\n        } else {\n            const item = this.queue[idx];\n            this.queue.splice(idx, 1);\n            return item.payload;\n        }\n    }\n}\n","// @ts-check\n\nimport Instance from \"./instance\";\nimport Player, { Role } from \"./player\";\nimport Channel from \"../network/channel\";\nimport Client from \"./client\";\n\n/**\n * @typedef {Object} ReplicateMoveMsg\n * @property {import(\"./player\").MoveMsg[]} moveMsgs\n */\n\nexport default class Server extends Instance {\n    /**\n     * @param {HTMLCanvasElement} canvas\n     */\n    constructor(canvas) {\n        super(canvas);\n        /** @type {Channel[]} */\n        this.sendChannels = [];\n        /** @type {Channel[]} */\n        this.recvChannels = [];\n        /**@type {Map<number, number>} */\n        this.idMap = new Map(); // id -> idx map\n\n        this.alwaysSync = true;\n\n        this.idSeed = 1;\n    }\n\n    /**\n     * @return {number} new id\n     */\n    generateId() {\n        const id = this.idSeed;\n        this.idSeed++;\n        return id;\n    }\n\n    /**\n     * generate a new player with player info and specific id\n     * @param {import(\"./player\").PlayerInfo} playerInfo\n     * @param {number} id\n     */\n    generatePlayer(playerInfo, id) {\n        const player = new Player(playerInfo.pos, playerInfo.color, id, playerInfo.flipAnime);\n        player.role = Role.authority;\n        player.isNetMode = true;\n        player.animator = playerInfo.animator;\n        return player;\n    }\n\n    /**\n     * @param {Channel} clientChannel\n     * @param {import(\"./player\").PlayerInfo} playerInfo\n     * @return {{serverChannel: Channel, id: number, playerInfos: import(\"./player\").PlayerInfo[]}}\n     */\n    establish(clientChannel, playerInfo) {\n        const id = this.generateId();\n        const idx = this.players.length;\n        this.idMap.set(id, idx);\n        const newPlayer = this.generatePlayer(playerInfo, id);\n        const newPlayerInfo = newPlayer.getPlayerInfo();\n        const respPlayerInfos = [];\n        for (let player of this.players) {\n            respPlayerInfos.push(player.getPlayerInfo());\n        }\n        this.addNewPlayer(newPlayer);\n        for (let sendChannel of this.sendChannels) {\n            /**@type {Client} */\n            const client = (sendChannel.receiver);\n            client.addRemotePlayer(newPlayerInfo);\n        }\n        const serverChannel = new Channel(this, clientChannel.sender, clientChannel.lag, clientChannel.lagVariance, clientChannel.loss);\n        this.sendChannels.push(serverChannel);\n        this.recvChannels.push(clientChannel);\n        return {\n            serverChannel: serverChannel,\n            id: id,\n            playerInfos: respPlayerInfos,\n        };\n    }\n\n    /**\n     * @param {number} id\n     */\n    dismantle(id) {\n        const idx = this.idMap.get(id);\n        this.idMap.delete(id);\n        this.sendChannels.splice(idx, 1);\n        this.recvChannels.splice(idx, 1);\n        this.players.splice(idx, 1);\n        for (let i = 0; i < this.players.length; i++) {\n            const remainId = this.players[i].id;\n            const oldIdx = this.idMap.get(remainId);\n            if (oldIdx > idx) {\n                this.idMap.set(remainId, oldIdx - 1);\n            }\n        }\n        for (let sendChannel of this.sendChannels) {\n            /**@type {Client} */\n            const client = (sendChannel.receiver);\n            client.removeRemotePlayer(id);\n        }\n    }\n\n    receiveNetMessage() {\n        for (let recvChannel of this.recvChannels) {\n            /**@type {import(\"./player\").MoveMsg} */\n            let moveMsg = recvChannel.fetch(this.currentTime);\n            while (moveMsg != null) {\n                if (this.idMap.has(moveMsg.id)) {\n                    const idx = this.idMap.get(moveMsg.id);\n                    this.players[idx].serverMove(moveMsg);\n                    moveMsg = recvChannel.fetch(this.currentTime);\n                }\n            }\n        }\n    }\n\n    /**\n      * @param {number} dt\n      */\n    update(dt) {\n        this.receiveNetMessage();\n        super.update(dt);\n        this.sendNetMessage();\n    }\n\n    sendNetMessage() {\n        const moveMsgs = []\n        for (let player of this.players) {\n            /**@type {import(\"./player\").MoveMsg} */\n            const moveMsg = player.consumeMoveMsg();\n            if (moveMsg != null) {\n                moveMsgs.push(moveMsg);\n            }\n            /**@type {ReplicateMoveMsg} */\n            const replicateMoveMsg = {\n                moveMsgs: moveMsgs,\n            }\n            for (let sendChannel of this.sendChannels) {\n                sendChannel.push(this.currentTime, replicateMoveMsg);\n            }\n        }\n    }\n\n    /**\n     * set instance update\n     * @param {number} interval\n     */\n    setUpdate(interval) {\n        super.setUpdate(interval);\n        for (let channel of this.sendChannels) {\n            /** @type {Client} */\n            const remoteClient = (channel.receiver);\n            remoteClient.serverInterval = interval;\n        }\n    }\n}\n","// @ts-check\n\nimport Instance from \"./instance\";\nimport Player, { Role } from \"./player\";\nimport Channel from \"../network/channel\";\nimport Vec2 from \"../algebra/vec2\";\nimport Server from \"./server\";\nimport InputSystem from \"./input/inputSystem\";\n\n/**\n * @typedef {Object} SavedMove\n * @property {number} sequence\n * @property {Vec2} velocity\n * @property {Vec2} acceleration\n * @property {number} dt\n */\n\nexport default class Client extends Instance {\n    /**\n     * @param {HTMLCanvasElement} canvas\n     * @param {Player} mainPlayer\n     * @param {InputSystem} input\n     */\n    constructor(canvas, mainPlayer, input) {\n        super(canvas);\n        this.input = input;\n        if (mainPlayer != null) {\n            this.mainPlayer = mainPlayer;\n            this.mainPlayer.isMainPlayer = true;\n            this.mainPlayer.role = Role.autonomous;\n            this.addNewPlayer(this.mainPlayer);\n        }\n\n        /** @type {Channel} */\n        this.sendChannel = null;\n        /** @type {Channel} */\n        this.recvChannel = null;\n\n        this.connected = false;\n        this.lag = 0;\n        this.lagVariance = 0;\n        this.loss = 0;\n        this.serverInterval = 0;\n    }\n\n    receiveNetMessage() {\n        if (!this.connected) {\n            return;\n        }\n        /**@type {import(\"./server\").ReplicateMoveMsg} */\n        let replicateMoveMsg = this.recvChannel.fetch(this.currentTime);\n        while (replicateMoveMsg != null) {\n            for (let moveMsg of replicateMoveMsg.moveMsgs) {\n                if (moveMsg.id != this.mainPlayer.id) {\n                    const findPlayer = this.players.find(player => player.id == moveMsg.id);\n                    if (findPlayer) {\n                        findPlayer.onReplicateMove(moveMsg);\n                    }\n                } else {\n                    this.mainPlayer.onMainPlayerReceiveServerMove(moveMsg);\n                }\n            }\n            replicateMoveMsg = this.recvChannel.fetch(this.currentTime);\n        }\n    }\n\n    /**\n     * @param {number} dt\n     */\n    update(dt) {\n        this.receiveNetMessage();\n        this.input.updateState();\n        if (this.mainPlayer) {\n            // handle mainPlayer move\n            const forward = this.input.getForward();\n            const right = this.input.getRight();\n            const inputVec = new Vec2(right, -forward);\n            if (this.input.getActionDown(\"jump\")) {\n                this.mainPlayer.jump();\n            }\n            if (this.input.getActionUp(\"jump\")) {\n                this.mainPlayer.stopJumping();\n            }\n            this.mainPlayer.addMovement(inputVec);\n        }\n        super.update(dt);\n        this.sendNetMessage();\n    }\n\n    sendNetMessage() {\n        if (!this.connected) {\n            return;\n        }\n        const moveMsg = this.mainPlayer.consumeMoveMsg();\n        if (moveMsg != null) {\n            this.sendChannel.push(this.currentTime, moveMsg);\n        }\n    }\n\n    /**\n     * @param {Server} server\n     */\n    connect(server) {\n        if (!this.mainPlayer) {\n            return;\n        }\n        this.sendChannel = new Channel(this, server, this.lag, this.lagVariance, this.loss);\n        const {serverChannel, id, playerInfos} = server.establish(this.sendChannel, this.mainPlayer.getPlayerInfo());\n        this.recvChannel = serverChannel;\n        this.mainPlayer.id = id;\n        for (let playerInfo of playerInfos) {\n            this.addRemotePlayer(playerInfo);\n        }\n        this.connected = true;\n        this.mainPlayer.isNetMode = true;\n    }\n\n    /**\n     * @param {Server} server\n     */\n    disconnect(server) {\n        if (!this.mainPlayer) {\n            return;\n        }\n        server.dismantle(this.mainPlayer.id);\n        this.sendChannel = null;\n        this.recvChannel = null;\n        this.mainPlayer.id = 0;\n        this.players.splice(1);\n        this.connected = false;\n        this.mainPlayer.isNetMode = false;\n        this.mainPlayer.clearNetState();\n    }\n\n    /**\n     * add new remote player\n     * @param {import(\"./player\").PlayerInfo} playerInfo\n     */\n    addRemotePlayer(playerInfo) {\n        const player = new Player(playerInfo.pos, playerInfo.color, playerInfo.id, playerInfo.flipAnime);\n        player.isNetMode = true;\n        player.role = Role.simulate;\n        player.animator = playerInfo.animator;\n        this.addNewPlayer(player);\n    }\n\n    /**\n     * @param {number} id\n     */\n    removeRemotePlayer(id) {\n        const idx = this.players.findIndex(player => player.id == id);\n        if (idx > 0) {\n            this.players.splice(idx, 1);\n        }\n    }\n\n    /**\n     * @param {number} lag\n     */\n    setLag(lag) {\n        this.lag = lag;\n        if (this.sendChannel) {\n            this.sendChannel.lag = lag;\n            this.recvChannel.lag = lag;\n        }\n    }\n\n    /**\n     * @param {number} lagVariance\n     */\n    setLagVariance(lagVariance) {\n        this.lagVariance = lagVariance;\n        if (this.sendChannel) {\n            this.sendChannel.lagVariance = lagVariance;\n            this.recvChannel.lagVariance = lagVariance;\n        }\n    }\n\n    /**\n     * @param {number} loss\n     */\n    setLoss(loss) {\n        this.loss = loss;\n        if (this.sendChannel) {\n            this.sendChannel.loss = loss;\n            this.recvChannel.loss = loss;\n        }\n    }\n}\n","// @ts-check\n\nimport Vec2 from \"./algebra/vec2\";\nimport Player from \"./core/player\";\nimport InputSystem from \"./core/input/inputSystem\";\nimport Client from \"./core/client\";\nimport Server from \"./core/server\";\nimport { Time, KeyStates } from \"./core/globals\";\nimport Animator from \"./core/anim/animator\";\nimport AnimeClip from \"./core/anim/animeClip\";\n\n/** @type {HTMLCanvasElement} */\nconst canvas1 = (document.getElementById(\"canvas1\"));\n/** @type {HTMLCanvasElement} */\nconst canvas2 = (document.getElementById(\"canvas2\"));\n/** @type {HTMLCanvasElement} */\nconst canvas3 = (document.getElementById(\"canvas3\"));\n\nconst walkAnimConfig = {\n    imageSrcs: [\n        \"public/images/adventurer-run-00.png\",\n        \"public/images/adventurer-run-01.png\",\n        \"public/images/adventurer-run-02.png\",\n        \"public/images/adventurer-run-03.png\",\n        \"public/images/adventurer-run-04.png\",\n        \"public/images/adventurer-run-05.png\",\n    ],\n    frames: [\n        {\n            idx: 0,\n            duration: 0.1,\n            pivot: new Vec2(30, 22),\n        },\n        {\n            idx: 1,\n            duration: 0.1,\n            pivot: new Vec2(30, 22),\n        },\n        {\n            idx: 2,\n            duration: 0.1,\n            pivot: new Vec2(30, 22),\n        },\n        {\n            idx: 3,\n            duration: 0.1,\n            pivot: new Vec2(30, 22),\n        },\n        {\n            idx: 4,\n            duration: 0.1,\n            pivot: new Vec2(30, 22),\n        },\n        {\n            idx: 5,\n            duration: 0.1,\n            pivot: new Vec2(30, 22),\n        }\n    ]\n}\nconst idleAnimConfig = {\n    imageSrcs: [\n        \"public/images/adventurer-idle-00.png\",\n        \"public/images/adventurer-idle-01.png\",\n        \"public/images/adventurer-idle-02.png\",\n        \"public/images/adventurer-idle-03.png\",\n    ],\n    frames: [\n        {\n            idx: 0,\n            duration: 0.2,\n            pivot: new Vec2(25, 22),\n        },\n        {\n            idx: 1,\n            duration: 0.2,\n            pivot: new Vec2(25, 22),\n        },\n        {\n            idx: 2,\n            duration: 0.2,\n            pivot: new Vec2(25, 22),\n        },\n        {\n            idx: 3,\n            duration: 0.2,\n            pivot: new Vec2(25, 22),\n        },\n    ]\n}\nconst fallAnimConfig = {\n    imageSrcs: [\n        \"public/images/adventurer-fall-00.png\",\n        \"public/images/adventurer-fall-01.png\",\n    ],\n    frames: [\n        {\n            idx: 0,\n            duration: 0.1,\n            pivot: new Vec2(28, 22),\n        },\n        {\n            idx: 1,\n            duration: 0.1,\n            pivot: new Vec2(28, 22),\n        },\n    ]\n}\nconst jumpAnimConfig = {\n    imageSrcs: [\n        \"public/images/adventurer-jump-00.png\",\n        \"public/images/adventurer-jump-01.png\",\n        \"public/images/adventurer-jump-02.png\",\n        \"public/images/adventurer-jump-03.png\",\n    ],\n    frames: [\n        {\n            idx: 0,\n            duration: 0.01,\n            pivot: new Vec2(28, 22),\n        },\n        {\n            idx: 1,\n            duration: 0.01,\n            pivot: new Vec2(28, 22),\n        },\n        {\n            idx: 2,\n            duration: 0.08,\n            pivot: new Vec2(28, 22),\n        },\n        {\n            idx: 3,\n            duration: 0.08,\n            pivot: new Vec2(28, 22),\n        },\n    ]\n}\nconst walkAnimeClip = new AnimeClip(walkAnimConfig);\nwalkAnimeClip.loadImages();\nconst idleAnimClip = new AnimeClip(idleAnimConfig);\nidleAnimClip.loadImages();\nconst fallAnimClip = new AnimeClip(fallAnimConfig);\nfallAnimClip.loadImages();\nconst jumpAnimClip = new AnimeClip(jumpAnimConfig);\njumpAnimClip.loadImages();\n\nconst client1Animator = new Animator();\nclient1Animator.addNewAnimeClip(\"walking\", walkAnimeClip);\nclient1Animator.addNewAnimeClip(\"idle\", idleAnimClip);\nclient1Animator.addNewAnimeClip(\"falling\", fallAnimClip);\nclient1Animator.addNewAnimeClip(\"jump\", jumpAnimClip);\n\n// client 1\nconst client1Player = new Player(new Vec2(50, 200), \"#FBE251\", 0);\nclient1Player.animator = client1Animator;\nconst input1 = new InputSystem();\ninput1.setAxis(\"KeyW\", \"KeyS\", \"KeyD\", \"KeyA\");\ninput1.setAction(\"jump\", \"Space\");\nconst client1 = new Client(canvas1, client1Player, input1);\n// client 2\nconst client2Player = new Player(new Vec2(400, 200), \"#FEDFE1\", 0);\nclient2Player.animator = client1Animator.clone();\nconst input2 = new InputSystem();\ninput2.setAxis(\"ArrowUp\", \"ArrowDown\", \"ArrowRight\", \"ArrowLeft\");\ninput2.setAction(\"jump\", \"Numpad0\");\nconst client2 = new Client(canvas3, client2Player, input2);\n// server\nconst server = new Server(canvas2);\n// instances\nconst instances = [client1, client2, server];\n\nwindow[\"client1\"] = client1;\nwindow[\"client2\"] = client2;\nwindow[\"server\"] = server;\n\n/**\n * lag settings\n * @param {Client} client\n * @param {string} id\n */\nconst handleLag = (client, id) => {\n    /** @type {HTMLInputElement} */\n    const lagInput = (document.getElementById(id));\n    lagInput.onchange = function(e) {\n        /** @type {HTMLInputElement} */\n        let target = (e.target);\n        let lag = parseInt(target.value) || 0;\n        target.value = lag.toString();\n        client.setLag(lag);\n    }\n    lagInput.dispatchEvent(new Event(\"change\"));\n}\nhandleLag(client1, \"client1_lag\");\nhandleLag(client2, \"client2_lag\");\n\n/**\n * lag variance settings\n * @param {Client} client\n * @param {string} id\n */\nconst handleLagVariance = (client, id) => {\n    /** @type {HTMLInputElement} */\n    const lagVarInput = (document.getElementById(id));\n    lagVarInput.onchange = function(e) {\n        /** @type {HTMLInputElement} */\n        let target = (e.target);\n        let lag = parseInt(target.value) || 0;\n        target.value = lag.toString();\n        client.setLagVariance(lag);\n    }\n    lagVarInput.dispatchEvent(new Event(\"change\"));\n}\nhandleLagVariance(client1, \"client1_lagVariance\");\nhandleLagVariance(client2, \"client2_lagVariance\");\n\n/**\n * loss settings\n * @param {Client} client\n * @param {string} id\n */\nconst handleLoss = (client, id) => {\n    /** @type {HTMLInputElement} */\n    const lossInput = (document.getElementById(id));\n    lossInput.onchange = function(e) {\n        /** @type {HTMLInputElement} */\n        let target = (e.target);\n        let loss = parseFloat(target.value) || 0;\n        if (loss < 0) {\n            loss = 0;\n        } else if (loss > 1) {\n            loss = 1;\n        }\n        target.value = loss.toString();\n        client.setLoss(loss);\n    }\n    lossInput.dispatchEvent(new Event(\"change\"));\n}\nhandleLoss(client1, \"client1_loss\");\nhandleLoss(client2, \"client2_loss\");\n\n/**\n * fps settings\n * @param {Client | Server} instance\n * @param {string} id\n */\nconst handleFps = (instance, id) => {\n    /** @type {HTMLInputElement} */\n    const fpsInput = (document.getElementById(id));\n    fpsInput.onchange = function(e) {\n        /** @type {HTMLInputElement} */\n        let target = (e.target);\n        let fps = parseInt(target.value) || 60;\n        if (fps < 3) {\n            fps = 3;\n        } else if (fps > 60) {\n            fps = 60;\n        }\n        target.value = fps.toString();\n        instance.setUpdate(1000 / fps);\n    }\n    fpsInput.dispatchEvent(new Event(\"change\"));\n}\nhandleFps(client1, \"client1_fps\");\nhandleFps(client2, \"client2_fps\");\nhandleFps(server, \"server_fps\");\n\n/**\n * always sync settings\n * @param {Server} server\n * @param {string} id\n */\nconst handleSync = (server, id) => {\n    /** @type {HTMLInputElement} */\n    const syncInput = (document.getElementById(id));\n    syncInput.onchange = function(e) {\n        /** @type {HTMLInputElement} */\n        let target = (e.target);\n        server.alwaysSync = target.checked;\n    }\n    syncInput.dispatchEvent(new Event(\"change\"));\n}\nhandleSync(server, \"server_sync\");\n\n/**\n * Connect\n * @param {Client} client\n * @param {string} id\n */\nconst handleConnect = (client, id) => {\n    /** @type {HTMLInputElement} */\n    const connectInput = (document.getElementById(id));\n    connectInput.onchange = function(e) {\n        /** @type {HTMLInputElement} */\n        let target = (e.target);\n        if (target.checked) {\n            client.connect(server);\n        } else {\n            client.disconnect(server);\n        }\n    }\n    connectInput.dispatchEvent(new Event(\"change\"));\n}\nhandleConnect(client1, \"client1_connect\");\nhandleConnect(client2, \"client2_connect\");\n\n/**\n * event handle\n * @param {KeyboardEvent} e\n */\nconst keyHandler = (e) => {\n    if (e.type === \"keydown\" || e.type === \"keypress\") {\n        KeyStates[e.code] = 1;\n    } else {\n        KeyStates[e.code] = 0;\n    }\n};\ndocument.body.onkeydown = keyHandler;\ndocument.body.onkeypress = keyHandler;\ndocument.body.onkeyup = keyHandler;\n\n/**\n * draw callback\n * @param {DOMHighResTimeStamp} timestamp\n */\nconst draw = (timestamp) => {\n    if (timestamp - Time.lastUnscaleTime > 300) {\n        Time.lastUnscaleTime = timestamp;\n    } else {\n        Time.lastUnscaleTime = Time.currentUnscaleTime;\n    }\n    Time.currentUnscaleTime = timestamp;\n    const unscaleDt = timestamp - Time.lastUnscaleTime;\n    const dt = unscaleDt * Time.scale;\n    Time.currentTime += dt;\n    for (let instance of instances) {\n        instance.tryUpdate();\n    }\n\n    requestAnimationFrame(draw);\n};\nrequestAnimationFrame(draw);\n"],"names":["Util.segmentShortestTest","Util.HitResult","GlobalKeyState"],"mappings":"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"}